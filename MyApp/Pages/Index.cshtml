@page "/"
@attribute [RenderStatic]
@inject MarkdownPages Markdown
@{
    Layout = "_LayoutEmpty";
    ViewData["Title"] = "Home page";
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/svg" href="/img/logo.svg">
    <title>@ViewData["Title"]</title>
    <script>
    if (location.search === "?dark") localStorage.setItem('color-scheme','dark') 
    if (location.search === "?light") localStorage.removeItem('color-scheme') 
    const cls = document.querySelector('html').classList
    if (localStorage.getItem('color-scheme') === 'dark')
        cls.add('dark')
    else
        cls.remove('dark')
    </script>
    <link rel="stylesheet" href="/css/app.css">
    <link rel="stylesheet" href="/css/typography.css">
    <link rel="stylesheet" href="/css/highlight.css">
    <link rel="stylesheet" href="/css/lite-yt-embed.css">
    <style>
    .prose :where(code):not(:where([class~="not-prose"] *)) {
        width: auto;
    }
    </style>

    @Html.ImportMap(new() {
        ["app.mjs"]              = ("/mjs/app.mjs",                     "/mjs/app.mjs"),
        ["vue"]                  = ("/lib/mjs/vue.mjs",                 "/lib/mjs/vue.min.mjs"),
        ["@servicestack/client"] = ("/lib/mjs/servicestack-client.mjs", "/lib/mjs/servicestack-client.min.mjs"),
        ["@servicestack/vue"]    = ("/lib/mjs/servicestack-vue.mjs",    "/lib/mjs/servicestack-vue.min.mjs"),
    })
</head>
<body class="bg-white dark:bg-black dark:text-white">
@await Html.PartialAsync("Header")

<div class="min-h-screen">
    <main role="main" class="pt-8 pb-3">
        
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 pt-20 pb-16 text-center lg:pt-32">

            <h1 class="mx-auto max-w-4xl font-display text-5xl font-medium tracking-tight text-slate-900 dark:text-slate-50 sm:text-7xl">
                SQL you know but
                <span class="relative whitespace-nowrap text-blue-600">
                    <svg aria-hidden="true" viewBox="0 0 418 42" class="absolute top-2/3 left-0 h-[0.58em] w-full fill-blue-300/70" preserveAspectRatio="none">
                        <path d="M203.371.916c-26.013-2.078-76.686 1.963-124.73 9.946L67.3 12.749C35.421 18.062 18.2 21.766 6.004 25.934 1.244 27.561.828 27.778.874 28.61c.07 1.214.828 1.121 9.595-1.176 9.072-2.377 17.15-3.92 39.246-7.496C123.565 7.986 157.869 4.492 195.942 5.046c7.461.108 19.25 1.696 19.17 2.582-.107 1.183-7.874 4.31-25.75 10.366-21.992 7.45-35.43 12.534-36.701 13.884-2.173 2.308-.202 4.407 4.442 4.734 2.654.187 3.263.157 15.593-.78 35.401-2.686 57.944-3.488 88.365-3.143 46.327.526 75.721 2.23 130.788 7.584 19.787 1.924 20.814 1.98 24.557 1.332l.066-.011c1.201-.203 1.53-1.825.399-2.335-2.911-1.31-4.893-1.604-22.048-3.261-57.509-5.556-87.871-7.36-132.059-7.842-23.239-.254-33.617-.116-50.627.674-11.629.54-42.371 2.494-46.696 2.967-2.359.259 8.133-3.625 26.504-9.81 23.239-7.825 27.934-10.149 28.304-14.005.417-4.348-3.529-6-16.878-7.066Z"></path>
                    </svg><span class="relative">type safe</span>
                </span>parameterized, expressive &amp; portable
            </h1>

            <div class="my-12 flex justify-center">
                <div class="w-72" data-component="ShellCommand" data-props="{ text:'npm install litdb' }"></div>
            </div>
            
            <p class="mx-auto mt-6 max-w-3xl text-lg tracking-tight text-slate-700 dark:text-slate-200">
                <b>litdb</b> contains <b>type-safe</b> SQL builders for TypeScript/JavaScript for writing expressive <b>SQL you know</b>
                that's <b>type-safe</b>, <b>parameterized</b> &amp; <b>portable</b> across SQLite, MySQL & PostgreSQL
            </p>
        </div>

        <div class="flex justify-center">
            <lite-youtube class="w-full" videoid="0OVXvhj8nU4"
                          style="background-image:url('/img/bg-video.png'); max-width:1280px; max-height:720px"></lite-youtube>
        </div>

        <div class="flex justify-center py-10">
            <div>
                <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-4 text-center">
                    SQL-like
                </h1>
                <p class="mx-auto max-w-2xl text-lg tracking-tight text-slate-700 dark:text-slate-200">
                    No need to learn a new query language, <b>litdb</b> lets you write familiar <b>SQL you know</b> 
                    using its <b>type-safe</b> expressions and query builders that's safe by default.
                    <br><br>
                    
                    APIs are designed to keep a close affinity to SQL making it clear what SQL is being generated,  
                    expressions utilize tagged templates to take away the tedium of maintaining table and column
                    references, parameterizing values and catering for different SQL dialects to retain the 
                    <b>expressive</b> freedom of SQL and <b>portable</b> across multiple RDBMS's.
                </p>
            </div>
        </div>

        <div class="flex justify-center py-10">
            <div class="text-center">
                <div class="flex justify-center items-end">
                    <svg class="text-indigo-600 w-36 h-36 inline-block" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path fill="currentColor" d="M188 96a60 60 0 1 0-60 60a59 59 0 0 0 7.81-.53l-26.27 46.64a12 12 0 0 0 20.92 11.78l49.54-88A59.57 59.57 0 0 0 188 96m-96 0a36 36 0 1 1 36 36a36 36 0 0 1-36-36"/></svg>
                    <div class="text-indigo-600 text-4xl font-semibold pb-4 -ml-10">kb</div>
                </div>
                <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-4 text-center md:text-left">
                    Small
                </h1>
                <ul role="list" class="space-y-2 font-display text-base text-slate-700">
                    <li>
                        <span>9kb .min + .zip, 36kb .min</span>
                    </li>
                    <li>
                        <span>0 dependencies</span>
                    </li>
                </ul>
            </div>
        </div>

        <div class="flex justify-center py-10">
            <div class="max-w-screen-lg">
                <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-4 text-center">
                    Install
                </h1>
                <div class="prose">
                    @await Html.PartialAsync("IncludeMarkdown", "home/install.md")
                </div>
            </div>
        </div>

        <div class="flex justify-center py-10">
            <div class="max-w-screen-lg">
                <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-4 text-center">
                    Type Safe
                </h1>
                <div class="mt-8 flex justify-center">
                    <div class="prose">
                        @await Html.PartialAsync("IncludeMarkdown", "home/typesafe.md")
                    </div>
                </div>
            </div>
        </div>

        <div class="flex justify-center py-10">
            <div class="max-w-screen-lg">
                <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-4 text-center">
                    Safe Refactoring
                </h1>
                <div class="mt-8 flex justify-center">
                    <div class="prose">
                        @await Html.PartialAsync("IncludeMarkdown", "home/safe-refactoring.md")
                    </div>
                </div>
            </div>
        </div>

        <div class="flex justify-center py-10">
            <div class="max-w-screen-lg">
                <h1 class="text-6xl md:text-7xl lg:text-8xl font-bold tracking-tighter leading-tight md:leading-none mb-4 text-center">
                    Composable
                </h1>
                <div class="mt-8 flex justify-center">
                    <div class="prose">
                        @await Html.PartialAsync("IncludeMarkdown", "home/composable.md")
                    </div>
                </div>
            </div>
        </div>

    </main>
</div>

@await Html.PartialAsync("Footer")

<script type="module">
import { init } from "app.mjs"
init()
</script>
<script src="/lib/js/lite-yt-embed.js"></script>
<script src="/mjs/docs.mjs" type="module"></script>
<script src="/lib/js/highlight.js"></script>
<script>hljs.highlightAll()</script>

</body>
</html>